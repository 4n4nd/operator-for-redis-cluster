apiVersion: db.ibm.com/v1alpha1
kind: RedisCluster
metadata:
  name: {{ include "icm-redis-cluster.fullname" . }}
  labels: {{- include "icm-redis-cluster.labels" . | nindent 4 }}
spec:
  numberOfPrimaries: {{ .Values.numberOfPrimaries }}
  replicationFactor: {{ .Values.replicationFactor }}
  serviceName: {{ include "icm-redis-cluster.fullname" . }}
  {{- with .Values.additionalLabels }}
  additionalLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  zoneAwareReplication:
    enabled: {{ .Values.zoneAwareReplication.enabled }}
  podTemplate:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "icm-redis-cluster.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "icm-redis-cluster.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.zoneAwareReplication.enabled }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels: {{- include "icm-redis-cluster.selectorLabels" . | nindent 14 }}
      {{- end }}
      initContainers:
        - name: sysctl-init
          image: alpine:3.13
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - >-
              sysctl -w net.core.somaxconn={{ .Values.sysctl.netCoreSomaxconn }};
          resources: {}
          securityContext:
            privileged: true
            procMount: Default
      containers:
        {{- if .Values.metrics.enabled }}
        - name: redis-exporter
          {{- with .Values.metrics.image }}
          image: "{{ .host }}/{{ .namespace }}/{{ .name }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
          env:
            - name: REDIS_EXPORTER_SCRIPT
              value: /redis-metrics/metrics.lua
          volumeMounts:
            - name: redis-exporter-lua-metrics
              mountPath: /redis-metrics
          ports:
          - containerPort: {{ .Values.metrics.port.number }}
            name: {{ .Values.metrics.port.name }}
        {{- end }}
        - name: redis-node
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [
            "--v={{ .Values.args.logLevel }}",
            "--c=/redis-conf/redis.conf",
            "--logtostderr={{ .Values.args.logToStderr }}",
            "--alsologtostderr={{ .Values.args.alsoLogToStderr }}",
            "--rs={{ include "icm-redis-cluster.fullname" . }}",
            "--t={{ .Values.args.maxStartWait }}",
            "--d={{ .Values.args.startDelay }}",
            "--ns=$(POD_NAMESPACE)",
            "--ip=$(POD_IP)",
            "--cluster-node-timeout={{ .Values.args.clusterNodeTimeout }}",
            {{- if include "icm-redis-cluster.hasextraconfig" . }}
            "--config-file=/redis-extra-conf/redis.conf",
            {{- end }}{{- include "redis-cluster.extraarglist" . }}
            ]
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: redis
              containerPort: 6379
              protocol: TCP
            - name: cluster
              containerPort: 16379
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /redis-data
            - name: conf
              mountPath: /redis-conf
            {{- if include "icm-redis-cluster.hasextraconfig" . }}
            - name: extra-conf
              mountPath: /redis-extra-conf
            {{- end }}
            - name: podinfo
              mountPath: /podinfo
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.metrics.enabled }}
        - name: redis-exporter-lua-metrics
          configMap:
            name: {{ include "icm-redis-cluster.fullname" . }}-lua-metrics
        {{- end }}
        - name: data
          emptyDir: {}
        - name: conf
          emptyDir: {}
        {{- if include "icm-redis-cluster.hasextraconfig" . }}
        - name: extra-conf
          configMap:
            name: {{ include "icm-redis-cluster.fullname" . }}
        {{- end }}
        - name: podinfo
          downwardAPI:
            items:
              - path: "mem_limit"
                resourceFieldRef:
                  containerName: redis-node
                  resource: limits.memory
