name: Release Workflow

on:
  release:
    types:
      - published

env:
  GO_VERSION: 1.15
  HELM_VERSION: v3.6.3
  REDIS_VERSION: 6.2.6
  ICR_USERNAME: iamapikey
  ICR_PASSWORD: ${{ secrets.IBMCLOUD_API_KEY }}
  HELM_REPO_USER: ${{ secrets.ARTIFACTORY_USER }}
  HELM_REPO_PASS: ${{ secrets.ARTIFACTORY_PASS }}
  HELM_REPO: ${{ secrets.ARTIFACTORY_HELM_REPO }}

jobs:
  operator:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare image metadata
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            us.icr.io/icm-docker-images/icm-redis-operator
            uk.icr.io/icm-docker-images/icm-redis-operator
            de.icr.io/icm-docker-images/icm-redis-operator
            au.icr.io/icm-docker-images/icm-redis-operator
            jp.icr.io/icm-docker-images/icm-redis-operator
          tags: type=ref,event=tag

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to IBM Cloud Container Registry US
        uses: docker/login-action@v1
        with:
          registry: us.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry UK
        uses: docker/login-action@v1
        with:
          registry: uk.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry DE
        uses: docker/login-action@v1
        with:
          registry: de.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry AU
        uses: docker/login-action@v1
        with:
          registry: au.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry JP
        uses: docker/login-action@v1
        with:
          registry: jp.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Authenticate with docker proxy registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_PROXY_REGISTRY }}
          username: ${{ secrets.ARTIFACTORY_USER }}
          password:  ${{ secrets.ARTIFACTORY_PASS }}

      - name: Build and push operator image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.operator
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DOCKER_PROXY_REGISTRY=${{ secrets.DOCKER_PROXY_REGISTRY }}/
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            OPERATOR_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}


  cluster-node:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare image metadata
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            us.icr.io/icm-docker-images/icm-redis-node
            uk.icr.io/icm-docker-images/icm-redis-node
            de.icr.io/icm-docker-images/icm-redis-node
            au.icr.io/icm-docker-images/icm-redis-node
            jp.icr.io/icm-docker-images/icm-redis-node
          tags: type=ref,event=tag

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to IBM Cloud Container Registry US
        uses: docker/login-action@v1
        with:
          registry: us.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry UK
        uses: docker/login-action@v1
        with:
          registry: uk.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry DE
        uses: docker/login-action@v1
        with:
          registry: de.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry AU
        uses: docker/login-action@v1
        with:
          registry: au.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry JP
        uses: docker/login-action@v1
        with:
          registry: jp.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Authenticate with docker proxy registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_PROXY_REGISTRY }}
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_PASS }}

      - name: Build and push redis-node image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.node
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DOCKER_PROXY_REGISTRY=${{ secrets.DOCKER_PROXY_REGISTRY }}/
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            OPERATOR_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

  metrics:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare image metadata
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            us.icr.io/icm-docker-images/icm-redis-metrics
            uk.icr.io/icm-docker-images/icm-redis-metrics
            de.icr.io/icm-docker-images/icm-redis-metrics
            au.icr.io/icm-docker-images/icm-redis-metrics
            jp.icr.io/icm-docker-images/icm-redis-metrics
          tags: type=ref,event=tag

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to IBM Cloud Container Registry US
        uses: docker/login-action@v1
        with:
          registry: us.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry UK
        uses: docker/login-action@v1
        with:
          registry: uk.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry DE
        uses: docker/login-action@v1
        with:
          registry: de.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry AU
        uses: docker/login-action@v1
        with:
          registry: au.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Login to IBM Cloud Container Registry JP
        uses: docker/login-action@v1
        with:
          registry: jp.icr.io
          username: ${{ env.ICR_USERNAME }}
          password: ${{ env.ICR_PASSWORD }}

      - name: Authenticate with docker proxy registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_PROXY_REGISTRY }}
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_PASS }}

      - name: Build and push redis-metrics image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.metrics
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DOCKER_PROXY_REGISTRY=${{ secrets.DOCKER_PROXY_REGISTRY }}/
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            OPERATOR_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

  helm-release:
    runs-on: ubuntu-latest
    needs: [operator, cluster-node, metrics]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package icm-redis-operator chart
        env:
          OPERATOR_VERSION: ${{ needs.operator.outputs.version }}
        run: helm package charts/icm-redis-operator --version=$OPERATOR_VERSION

      - name: Package icm-redis-cluster chart
        env:
          OPERATOR_VERSION: ${{ needs.cluster-node.outputs.version }}
        run: helm package charts/icm-redis-cluster --version=$OPERATOR_VERSION --app-version=${{ env.REDIS_VERSION }}

      - name: Publish icm-redis-operator chart
        env:
          OPERATOR_VERSION: ${{ needs.operator.outputs.version }}
        run: |
          md5sum_var=$(md5sum ./icm-redis-operator-$OPERATOR_VERSION.tgz | awk '{ print $1 }')
          sha1sum_var=$(sha1sum ./icm-redis-operator-$OPERATOR_VERSION.tgz | awk '{ print $1 }')
          curl -s -o /dev/null -w '%{http_code}' -u$HELM_REPO_USER:$HELM_REPO_PASS -T ./icm-redis-operator-$OPERATOR_VERSION.tgz --header X-Checksum-MD5:$md5sum_var --header X-Checksum-Sha1:$sha1sum_var $HELM_REPO/icm-redis-operator-$OPERATOR_VERSION.tgz

      - name: Publish icm-redis-cluster chart
        env:
          OPERATOR_VERSION: ${{ needs.cluster-node.outputs.version }}
        run: |
          md5sum_var=$(md5sum ./icm-redis-cluster-$OPERATOR_VERSION.tgz | awk '{ print $1 }')
          sha1sum_var=$(sha1sum ./icm-redis-cluster-$OPERATOR_VERSION.tgz | awk '{ print $1 }')
          curl -s -o /dev/null -w '%{http_code}' -u$HELM_REPO_USER:$HELM_REPO_PASS -T ./icm-redis-cluster-$OPERATOR_VERSION.tgz --header X-Checksum-MD5:$md5sum_var --header X-Checksum-Sha1:$sha1sum_var $HELM_REPO/icm-redis-cluster-$OPERATOR_VERSION.tgz

  docs:
    name: Publish Docs
    needs: [ helm-release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.4 # This is recommended LTS version which includes npm 6.14.10
      - name: Publish docs website
        env:
          USE_SSH: false
          GIT_USER: git
          CURRENT_BRANCH: main
          DEPLOYMENT_BRANCH: gh-pages
          GIT_PASS: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "gh-actions"
          cd ./docs
          npm ci
          npx docusaurus deploy

  assets:
    name: Publish Assets
    needs: [ docs ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build redis plugin
        run: make build-kubectl-rc

      - name: Publish redis plugin to assets
        uses: skx/github-action-publish-binaries@release-0.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: './bin/kubectl-rc'
